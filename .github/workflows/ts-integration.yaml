name: Integration tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  solana_version: v1.9.29
  anchor_version: 0.20.1
  rustc_version: 1.59

jobs:
  ts-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_name:
          [
            'yarn run ts-mocha -t 1000000 tests/test_oracle_operation.ts',
            'yarn run ts-mocha -t 1000000 tests/test_crank.ts',
            'yarn run ts-mocha -t 1000000 tests/test_yi_token.ts',
            'yarn run ts-mocha -t 1000000 tests/test_switchboard.ts',
          ]
    steps:
      - uses: actions/checkout@v2
      - name: test
        run: |
          echo "${{ matrix.test_name }}"
      - name: Install dependency
        run: |
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt-get install -y pkg-config build-essential libudev-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt, clippy
          toolchain: ${{ env.rustc_version }}
          default: true
      - name: Rust Cache
        uses: Swatinem/rust-cache@v1.4.0
        with:
          cache-on-failure: true
      - uses: actions/cache@v2
        name: Cache Solana Tool Suite
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.solana_version }}
      - uses: actions/cache@v2
        name: Cache Node Modules
        id: cache-node-modules
        with:
          path: |
            ~/.npm/
            ~/.yarn/
            ./node_modules
          key: npm-${{ runner.os }}-v0001-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install global mocha
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          npm install -g yarn
          npm install -g mocha
          npm install -g ts-mocha
          npm install -g typescript
      - name: install Solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ env.solana_version }}/install)"
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          # Avoid issues with RUSTC var being forced to rustup install instead of solana's
          mv ~/.local/share/solana/install/active_release/bin/cargo-build-bpf ~/.local/share/solana/install/active_release/bin/cargo-build-bpf-orig
          echo "#!/bin/bash" >> ~/.local/share/solana/install/active_release/bin/cargo-build-bpf
          echo "unset RUSTC" >> ~/.local/share/solana/install/active_release/bin/cargo-build-bpf
          echo '${BASH_SOURCE%/*}/cargo-build-bpf-orig' >> ~/.local/share/solana/install/active_release/bin/cargo-build-bpf
          chmod +x ~/.local/share/solana/install/active_release/bin/cargo-build-bpf
          solana --version
      - name: install Anchor
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          cargo install --git https://github.com/project-serum/anchor --tag v0.20.1 anchor-cli --locked
      - name: yarn install
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          yarn install
      - name: build programs
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          rustc --version
          make build
      - name: test
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          export CLUSTER=localnet
          make test-validator > validator.logs 2>&1 &
          sleep 15
          make airdrop
          make deploy
          ${{ matrix.test_name }}
