name: Integration tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  solana_version: stable
  anchor_version: 0.22.0

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_name:
          [
            'yarn run ts-mocha -t 1000000 tests/test_oracle_operation.ts',
            'yarn run ts-mocha -t 1000000 tests/test_crank.ts',
            'cargo test',
          ]
    steps:
      - uses: actions/checkout@v2
      - name: test
        run: |
          echo "${{ matrix.test_name }}"
      - uses: actions/cache@v2
        name: Cache Cargo registry + index
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v2
        name: Cache Solana Tool Suite
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.solana_version }}
      - uses: actions/cache@v2
        name: Cache target folder
        id: cache-programs
        with:
          path: |
            ./target
          key: solana-${{ runner.os }}-v0000-${{ hashFiles('**/programs/**/*.rs') }}-${{ hashFiles('**/programs/**/*.toml') }}
      - uses: actions/cache@v2
        name: Cache Node Modules
        id: cache-node-modules
        with:
          path: |
            ~/.npm/
            ~/.yarn/
            ./node_modules
          key: npm-${{ runner.os }}-v0000-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-node@v2
        with:
          node-version: '17'
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: install global mocha
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          npm install -g yarn
          npm install -g mocha
          npm install -g ts-mocha
          npm install -g typescript
          npm install -g @project-serum/anchor
          npm install -g @project-serum/anchor-cli
      - name: install essential
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/${{ env.solana_version }}/install)"
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
      - name: setup solana
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          solana-keygen new --no-bip39-passphrase -s
          mkdir -p keys/localnet
          solana-keygen new --no-bip39-passphrase -s -o keys/localnet/owner.json
      - name: yarn install
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          yarn install
      - name: build programs
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          make build
      - name: test
        run: |
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          export CLUSTER=localnet
          solana-test-validator -r --bpf-program YiiTopEnX2vyoWdXuG45ovDFYZars4XZ4w6td6RVTFm deps/yi.so --url mainnet-beta --clone EDLcx5J9aBkA6a7V5aQLqb8nnBByNhhNn8Qr9QksHobc TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA CGczF9uYdSVXmSr9swMafhF1ktHsi6ygcgTHWL71XNZ9 53bbgS6eK2iBL4iKv8C3tzCLwtoidyssCmosV2ESTXAs --account JAa3gQySiTi8tH3dpkvgztJWHQC1vGXr5m6SQ9LEM55T solustscope.json > validator.logs 2>&1 &
          sleep 10
          make airdrop
          make deploy
          ${{ matrix.test_name }}
